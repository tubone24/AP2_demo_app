[project]
name = "ap2-demo-v2"
version = "2.0.0"
description = "AP2 Protocol Demo Application v2 - Microservices Architecture"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    # Web Framework
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.30.0",
    "python-multipart>=0.0.9",
    "sse-starlette>=2.1.0",
    # Database
    "sqlalchemy>=2.0.35",
    "aiosqlite>=0.20.0",
    # Cryptography (reuse existing ap2_crypto.py)
    "cryptography>=43.0.0",
    "fido2>=1.1.3",
    "cbor2>=5.6.0",
    # JWT & SD-JWT for user_authorization (AP2 spec compliance)
    "pyjwt>=2.9.0",
    "sd-jwt>=0.10.0",
    "rfc8785>=0.1.4",
    # Password Hashing (OWASP Best Practices - Argon2id)
    "passlib[argon2]>=1.7.4",
    "argon2-cffi>=23.1.0",
    # Data Validation
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    # HTTP Client
    "httpx>=0.27.0",
    "aiohttp>=3.10.0",
    # Utilities
    "python-dotenv>=1.0.1",
    "reportlab>=4.4.4",
    # AI Agent Integration
    "langgraph>=1.0.1",
    "langchain>=0.3.0",
    "langchain-core>=0.3.0",
    "langchain-openai>=0.2.0",
    "mcp>=1.0.0",
    "langfuse>=2.0.0",
    # OpenTelemetry - Distributed Tracing
    "opentelemetry-api>=1.28.0",
    "opentelemetry-sdk>=1.28.0",
    "opentelemetry-instrumentation-fastapi>=0.59b0",
    "opentelemetry-instrumentation-httpx>=0.59b0",
    "opentelemetry-exporter-otlp>=1.28.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "httpx>=0.27.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["common", "services"]

[dependency-groups]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
]
